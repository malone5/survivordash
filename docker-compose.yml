version: '3'

services:
  db:
    image: postgres
    restart: always
    build:
      context: ./containers/warehouse
      dockerfile: db.Dockerfile
    env_file:
      - env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - postgres-network

  pipeline:
    image: pipeline
    container_name: pipeline
    build:
      context: ./
      dockerfile: ./containers/pipeline/Dockerfile
    volumes:
      - ./:/code
    env_file:
      - env
    environment:
      WAREHOUSE_USER: ${POSTGRES_USER}
      WAREHOUSE_PASSWORD: ${POSTGRES_PASSWORD}
      WAREHOUSE_DB: ${POSTGRES_DB}
      WAREHOUSE_HOST: ${POSTGRES_HOST}
      WAREHOUSE_PORT: ${POSTGRES_PORT}
    depends_on: 
      - db
    networks:
      - postgres-network


      
  adminer:
    image: adminer
    restart: always
    ports:
      - 4000:8080
    networks:
      - postgres-network

  metabase:
    image: metabase/metabase:latest
    restart: always
    ports:
      - 3000:3000
    env_file:
      - env
    environment: 
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: ${POSTGRES_DB}
      MB_DB_PORT: ${POSTGRES_PORT}
      MB_DB_USER: ${POSTGRES_USER}
      MB_DB_PASS: ${POSTGRES_PASSWORD}
      MB_DB_HOST: db
    volumes:
      - /home/seanzy/Projects/survivorDash/metabase-data:/metabase-data
    depends_on: 
      - db
    networks:
      - postgres-network

networks:
  postgres-network:
    driver: bridge

